//
//  SearchPresenter.swift
//  Music Player
//
//  Created by Saidaxmad on 29/09/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol SearchPresentationLogic
{
    func presentSomething(response: Search.Something.Response.ResponceType)
}

class SearchPresenter: SearchPresentationLogic
{
  weak var viewController: SearchDisplayLogic?
  
  // MARK: Do something
  
    func presentSomething(response: Search.Something.Response.ResponceType) {
//    let viewModel = Search.Something.ViewModel()
//    viewController?.displaySomething(viewModel: viewModel)
        
        switch response {
        case .some:
            print("go")
        case .presentTracks(let searchResults):
           let cells = searchResults?.results.map({ (track) in
                cellViewModel(from: track)
            }) ?? []
            let searchViewModel = SearchViewModel.init(cells: cells)
            print("presenter")
            viewController?.displaySomething(viewModel: Search.Something.ViewModel.ViewModelData.displayTacks(searchViewModel: searchViewModel))
        }
  }
    
    private func cellViewModel(from track: Track) -> SearchViewModel.Cell {
        
        return SearchViewModel.Cell.init(iconUrlString: track.artworkUrl100,
                                         trackName: track.trackName,
                                         collectionName: track.collectionName ?? "",
                                         artistName: track.artistName,
                                         previewUrl: track.previewUrl)
    }
}
